/*
 * @author Mário Soares
 * @contributors Jefferson González
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_EVENTS_H_GUARD
#define WXPHP_EVENTS_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_events_get_args, 0, 0, 1)
	ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxEventFilter_entry;
void php_wxEventFilter_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxEventFilter_php: public wxEventFilter{
	public:
	
	wxEventFilter_php():wxEventFilter(){}
		
	int FilterEvent(wxEvent& event);
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxEventFilter 
{
    zend_object zo;
    wxEventFilter_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxEventFilter_free(void *object TSRMLS_DC);
zend_object_value php_wxEventFilter_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxEventFilter_functions[] = {
	PHP_ME(php_wxEventFilter, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxKeyboardState_entry;
void php_wxKeyboardState_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxKeyboardState_php: public wxKeyboardState{
	public:
	
	wxKeyboardState_php(bool controlDown=false, bool shiftDown=false, bool altDown=false, bool metaDown=false):wxKeyboardState(controlDown, shiftDown, altDown, metaDown){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxKeyboardState 
{
    zend_object zo;
    wxKeyboardState_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxKeyboardState_free(void *object TSRMLS_DC);
zend_object_value php_wxKeyboardState_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxKeyboardState_functions[] = {
	PHP_ME(php_wxKeyboardState, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, CmdDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, GetModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, HasModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, RawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetAltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetMetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetRawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxAuiManagerEvent_entry;
void php_wxAuiManagerEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxAuiManagerEvent_php: public wxAuiManagerEvent{
	public:
	
	wxAuiManagerEvent_php(wxEventType type=wxEVT_NULL):wxAuiManagerEvent(type){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxAuiManagerEvent 
{
    zend_object zo;
    wxAuiManagerEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxAuiManagerEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxAuiManagerEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxAuiManagerEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxAuiManagerEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, SetPane, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, SetManager, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, SetDC, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, SetCanVeto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, SetButton, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, GetVeto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, GetPane, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, GetManager, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, GetDC, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, GetButton, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxAuiManagerEvent, CanVeto, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxCalendarEvent_entry;
void php_wxCalendarEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxCalendarEvent_php: public wxCalendarEvent{
	public:
	
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxCalendarEvent 
{
    zend_object zo;
    wxCalendarEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxCalendarEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxCalendarEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCalendarEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDateEvent, GetDate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDateEvent, SetDate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalendarEvent, GetWeekDay, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalendarEvent, SetWeekDay, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxColourPickerEvent_entry;
void php_wxColourPickerEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxColourPickerEvent_php: public wxColourPickerEvent{
	public:
	
	wxColourPickerEvent_php(wxObject* generator, int id, const wxColour& colour):wxColourPickerEvent(generator, id, colour){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxColourPickerEvent 
{
    zend_object zo;
    wxColourPickerEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxColourPickerEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxColourPickerEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxColourPickerEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourPickerEvent, GetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourPickerEvent, SetColour, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxColourPickerEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxCollapsiblePaneEvent_entry;
void php_wxCollapsiblePaneEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxCollapsiblePaneEvent_php: public wxCollapsiblePaneEvent{
	public:
	
	wxCollapsiblePaneEvent_php(wxObject* generator, int id, bool collapsed):wxCollapsiblePaneEvent(generator, id, collapsed){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxCollapsiblePaneEvent 
{
    zend_object zo;
    wxCollapsiblePaneEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxCollapsiblePaneEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxCollapsiblePaneEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCollapsiblePaneEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCollapsiblePaneEvent, GetCollapsed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCollapsiblePaneEvent, SetCollapsed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCollapsiblePaneEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxDataViewEvent_entry;
void php_wxDataViewEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDataViewEvent_php: public wxDataViewEvent{
	public:
	
	wxDataViewEvent_php(wxEventType commandType=wxEVT_NULL, int winid=0):wxDataViewEvent(commandType, winid){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxDataViewEvent 
{
    zend_object zo;
    wxDataViewEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxDataViewEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxDataViewEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDataViewEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetCacheFrom, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetCacheTo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetDataBuffer, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetDataFormat, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetDataSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetDataViewColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetModel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, GetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, IsEditCancelled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, SetColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, SetDataObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, SetDataViewColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, SetModel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, SetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDataViewEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxDateEvent_entry;
void php_wxDateEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxDateEvent_php: public wxDateEvent{
	public:
	
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxDateEvent 
{
    zend_object zo;
    wxDateEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxDateEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxDateEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDateEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDateEvent, GetDate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxDateEvent, SetDate, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxEvent_entry;
void php_wxEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxEvent_php: public wxEvent{
	public:
	
	wxEvent_php(int id=0, wxEventType eventType=wxEVT_NULL):wxEvent(id, eventType){}
		
	wxEvent* Clone() const;
		
	void InitProperties(){
		properties = new void*[1];

		properties[0] = &m_propagationLevel;
		
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxEvent 
{
    zend_object zo;
    wxEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxEvent, __get, wxphp_events_get_args, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxEventBlocker_entry;
void php_wxEventBlocker_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxEventBlocker_php: public wxEventBlocker{
	public:
	
	wxEventBlocker_php(wxWindow* win, wxEventType type=-1):wxEventBlocker(win, type){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxEventBlocker 
{
    zend_object zo;
    wxEventBlocker_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxEventBlocker_free(void *object TSRMLS_DC);
zend_object_value php_wxEventBlocker_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxEventBlocker_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, Connect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, AddFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, AddPendingEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, DeletePendingEvents, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetNextHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, IsUnlinked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessEventLocally, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessPendingEvents, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, QueueEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, RemoveFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SafelyProcessEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetNextHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, Unlink, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEventBlocker, Block, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEventBlocker, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxEvtHandler_entry;
void php_wxEvtHandler_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxEvtHandler_php: public wxEvtHandler{
	public:
	
	wxEvtHandler_php():wxEvtHandler(){}
		
	bool TryAfter(wxEvent& event);
	bool TryBefore(wxEvent& event);
		
	void InitProperties(){
	}
	
	void onEvent(wxEvent& evnt);
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxEvtHandler 
{
    zend_object zo;
    wxEvtHandler_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxEvtHandler_free(void *object TSRMLS_DC);
zend_object_value php_wxEvtHandler_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxEvtHandler_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxEvtHandler, Connect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, AddFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, AddPendingEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, DeletePendingEvents, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetNextHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, IsUnlinked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessEventLocally, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessPendingEvents, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, QueueEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, RemoveFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SafelyProcessEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetNextHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, Unlink, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxKeyEvent_entry;
void php_wxKeyEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxKeyEvent_php: public wxKeyEvent{
	public:
	
	wxKeyEvent_php(wxEventType keyEventType=wxEVT_NULL):wxKeyEvent(keyEventType){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxKeyEvent 
{
    zend_object zo;
    wxKeyEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxKeyEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxKeyEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxKeyEvent_functions[] = {
	PHP_ME(php_wxKeyboardState, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, CmdDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, GetModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, HasModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, RawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetAltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetMetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetRawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, DoAllowNextEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, GetKeyCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, GetRawKeyCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, GetRawKeyFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, GetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, GetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, IsKeyInCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, IsNextEventAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxScrollWinEvent_entry;
void php_wxScrollWinEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxScrollWinEvent_php: public wxScrollWinEvent{
	public:
	
	wxScrollWinEvent_php(wxEventType commandType=wxEVT_NULL, int pos=0, int orientation=0):wxScrollWinEvent(commandType, pos, orientation){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxScrollWinEvent 
{
    zend_object zo;
    wxScrollWinEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxScrollWinEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxScrollWinEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxScrollWinEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollWinEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxScrollWinEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollWinEvent, SetOrientation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollWinEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollWinEvent, GetOrientation, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSysColourChangedEvent_entry;
void php_wxSysColourChangedEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSysColourChangedEvent_php: public wxSysColourChangedEvent{
	public:
	
	wxSysColourChangedEvent_php():wxSysColourChangedEvent(){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSysColourChangedEvent 
{
    zend_object zo;
    wxSysColourChangedEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSysColourChangedEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSysColourChangedEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSysColourChangedEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSysColourChangedEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxWindowCreateEvent_entry;
void php_wxWindowCreateEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxWindowCreateEvent_php: public wxWindowCreateEvent{
	public:
	
	wxWindowCreateEvent_php(wxWindow* win=NULL):wxWindowCreateEvent(win){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxWindowCreateEvent 
{
    zend_object zo;
    wxWindowCreateEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxWindowCreateEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxWindowCreateEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWindowCreateEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWindowCreateEvent, GetWindow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWindowCreateEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxPaintEvent_entry;
void php_wxPaintEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxPaintEvent_php: public wxPaintEvent{
	public:
	
	wxPaintEvent_php(int id=0):wxPaintEvent(id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxPaintEvent 
{
    zend_object zo;
    wxPaintEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxPaintEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxPaintEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPaintEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxPaintEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMaximizeEvent_entry;
void php_wxMaximizeEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMaximizeEvent_php: public wxMaximizeEvent{
	public:
	
	wxMaximizeEvent_php(int id=0):wxMaximizeEvent(id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMaximizeEvent 
{
    zend_object zo;
    wxMaximizeEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMaximizeEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxMaximizeEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMaximizeEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMaximizeEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxUpdateUIEvent_entry;
void php_wxUpdateUIEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxUpdateUIEvent_php: public wxUpdateUIEvent{
	public:
	
	wxUpdateUIEvent_php(wxWindowID commandId=0):wxUpdateUIEvent(commandId){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxUpdateUIEvent 
{
    zend_object zo;
    wxUpdateUIEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxUpdateUIEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxUpdateUIEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxUpdateUIEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, CanUpdate, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, Check, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, Enable, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetMode, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetSetChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetSetEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetSetShown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetSetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetShown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, GetUpdateInterval, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, ResetUpdateTime, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, SetMode, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, SetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, SetUpdateInterval, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, Show, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxUpdateUIEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxClipboardTextEvent_entry;
void php_wxClipboardTextEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxClipboardTextEvent_php: public wxClipboardTextEvent{
	public:
	
	wxClipboardTextEvent_php(wxEventType commandType=wxEVT_NULL, int id=0):wxClipboardTextEvent(commandType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxClipboardTextEvent 
{
    zend_object zo;
    wxClipboardTextEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxClipboardTextEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxClipboardTextEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxClipboardTextEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxClipboardTextEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMouseEvent_entry;
void php_wxMouseEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMouseEvent_php: public wxMouseEvent{
	public:
	
	wxMouseEvent_php(wxEventType mouseEventType=wxEVT_NULL):wxMouseEvent(mouseEventType){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMouseEvent 
{
    zend_object zo;
    wxMouseEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMouseEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxMouseEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMouseEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, CmdDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, GetModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, HasModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, RawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetAltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetMetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetRawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, Aux1IsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, Aux2IsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, GetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, GetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, LeftIsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, MiddleIsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, RightIsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetAux1Down, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetAux2Down, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetLeftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetMiddleDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetRightDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetState, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Aux1DClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Aux1Down, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Aux1Up, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Aux2DClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Aux2Down, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Aux2Up, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Button, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, ButtonDClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, ButtonDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, ButtonUp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Dragging, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Entering, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, GetButton, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, GetClickCount, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, GetLinesPerAction, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, GetLogicalPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, GetWheelDelta, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, GetWheelRotation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, IsButton, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, IsPageScroll, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Leaving, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, LeftDClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, LeftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, LeftUp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, MiddleDClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, MiddleDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, MiddleUp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, Moving, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, RightDClick, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, RightDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, RightUp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxMouseEvent, GetWheelAxis, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxCommandEvent_entry;
void php_wxCommandEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxCommandEvent_php: public wxCommandEvent{
	public:
	
	wxCommandEvent_php(wxEventType commandEventType=wxEVT_NULL, int id=0):wxCommandEvent(commandEventType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxCommandEvent 
{
    zend_object zo;
    wxCommandEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxCommandEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxCommandEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCommandEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxActivateEvent_entry;
void php_wxActivateEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxActivateEvent_php: public wxActivateEvent{
	public:
	
	wxActivateEvent_php(wxEventType eventType=wxEVT_NULL, bool active=true, int id=0):wxActivateEvent(eventType, active, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxActivateEvent 
{
    zend_object zo;
    wxActivateEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxActivateEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxActivateEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxActivateEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxActivateEvent, GetActive, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxActivateEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxContextMenuEvent_entry;
void php_wxContextMenuEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxContextMenuEvent_php: public wxContextMenuEvent{
	public:
	
	wxContextMenuEvent_php(wxEventType type=wxEVT_NULL, int id=0, const wxPoint& pos=wxDefaultPosition):wxContextMenuEvent(type, id, pos){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxContextMenuEvent 
{
    zend_object zo;
    wxContextMenuEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxContextMenuEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxContextMenuEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxContextMenuEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxContextMenuEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxContextMenuEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxContextMenuEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxEraseEvent_entry;
void php_wxEraseEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxEraseEvent_php: public wxEraseEvent{
	public:
	
	wxEraseEvent_php(int id=0, wxDC* dc=NULL):wxEraseEvent(id, dc){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxEraseEvent 
{
    zend_object zo;
    wxEraseEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxEraseEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxEraseEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxEraseEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEraseEvent, GetDC, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEraseEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFocusEvent_entry;
void php_wxFocusEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFocusEvent_php: public wxFocusEvent{
	public:
	
	wxFocusEvent_php(wxEventType eventType=wxEVT_NULL, int id=0):wxFocusEvent(eventType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFocusEvent 
{
    zend_object zo;
    wxFocusEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFocusEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxFocusEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFocusEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFocusEvent, GetWindow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFocusEvent, SetWindow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFocusEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxChildFocusEvent_entry;
void php_wxChildFocusEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxChildFocusEvent_php: public wxChildFocusEvent{
	public:
	
	wxChildFocusEvent_php(wxWindow* win=NULL):wxChildFocusEvent(win){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxChildFocusEvent 
{
    zend_object zo;
    wxChildFocusEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxChildFocusEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxChildFocusEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxChildFocusEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxChildFocusEvent, GetWindow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxChildFocusEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxNotifyEvent_entry;
void php_wxNotifyEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxNotifyEvent_php: public wxNotifyEvent{
	public:
	
	wxNotifyEvent_php(wxEventType eventType=wxEVT_NULL, int id=0):wxNotifyEvent(eventType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxNotifyEvent 
{
    zend_object zo;
    wxNotifyEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxNotifyEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxNotifyEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxNotifyEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxThreadEvent_entry;
void php_wxThreadEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxThreadEvent_php: public wxThreadEvent{
	public:
	
	wxThreadEvent_php(wxEventType eventType=wxEVT_THREAD, int id=wxID_ANY):wxThreadEvent(eventType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxThreadEvent 
{
    zend_object zo;
    wxThreadEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxThreadEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxThreadEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxThreadEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, CloneMethod, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxThreadEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxHelpEvent_entry;
void php_wxHelpEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxHelpEvent_php: public wxHelpEvent{
	public:
	
	wxHelpEvent_php(wxEventType type=wxEVT_NULL, wxWindowID winid=0, const wxPoint& pt=wxDefaultPosition, wxHelpEvent::Origin origin=Origin_Unknown):wxHelpEvent(type, winid, pt, origin){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxHelpEvent 
{
    zend_object zo;
    wxHelpEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxHelpEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxHelpEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxHelpEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHelpEvent, GetOrigin, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHelpEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHelpEvent, SetOrigin, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHelpEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHelpEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxScrollEvent_entry;
void php_wxScrollEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxScrollEvent_php: public wxScrollEvent{
	public:
	
	wxScrollEvent_php(wxEventType commandType=wxEVT_NULL, int id=0, int pos=0, int orientation=0):wxScrollEvent(commandType, id, pos, orientation){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxScrollEvent 
{
    zend_object zo;
    wxScrollEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxScrollEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxScrollEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxScrollEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxScrollEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollEvent, SetOrientation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxScrollEvent, GetOrientation, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxIdleEvent_entry;
void php_wxIdleEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxIdleEvent_php: public wxIdleEvent{
	public:
	
	wxIdleEvent_php():wxIdleEvent(){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxIdleEvent 
{
    zend_object zo;
    wxIdleEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxIdleEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxIdleEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxIdleEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIdleEvent, GetMode, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIdleEvent, MoreRequested, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIdleEvent, RequestMore, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIdleEvent, SetMode, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxIdleEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxInitDialogEvent_entry;
void php_wxInitDialogEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxInitDialogEvent_php: public wxInitDialogEvent{
	public:
	
	wxInitDialogEvent_php(int id=0):wxInitDialogEvent(id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxInitDialogEvent 
{
    zend_object zo;
    wxInitDialogEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxInitDialogEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxInitDialogEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxInitDialogEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxInitDialogEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxWindowDestroyEvent_entry;
void php_wxWindowDestroyEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxWindowDestroyEvent_php: public wxWindowDestroyEvent{
	public:
	
	wxWindowDestroyEvent_php(wxWindow* win=NULL):wxWindowDestroyEvent(win){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxWindowDestroyEvent 
{
    zend_object zo;
    wxWindowDestroyEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxWindowDestroyEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxWindowDestroyEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWindowDestroyEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWindowDestroyEvent, GetWindow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWindowDestroyEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxNavigationKeyEvent_entry;
void php_wxNavigationKeyEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxNavigationKeyEvent_php: public wxNavigationKeyEvent{
	public:
	
	wxNavigationKeyEvent_php():wxNavigationKeyEvent(){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxNavigationKeyEvent 
{
    zend_object zo;
    wxNavigationKeyEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxNavigationKeyEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxNavigationKeyEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxNavigationKeyEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, GetCurrentFocus, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, GetDirection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, IsFromTab, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, IsWindowChange, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, SetCurrentFocus, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, SetDirection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, SetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, SetFromTab, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, SetWindowChange, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNavigationKeyEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxCloseEvent_entry;
void php_wxCloseEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxCloseEvent_php: public wxCloseEvent{
	public:
	
	wxCloseEvent_php(wxEventType commandEventType=wxEVT_NULL, int id=0):wxCloseEvent(commandEventType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxCloseEvent 
{
    zend_object zo;
    wxCloseEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxCloseEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxCloseEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCloseEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCloseEvent, CanVeto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCloseEvent, GetLoggingOff, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCloseEvent, SetCanVeto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCloseEvent, SetLoggingOff, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCloseEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCloseEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMenuEvent_entry;
void php_wxMenuEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMenuEvent_php: public wxMenuEvent{
	public:
	
	wxMenuEvent_php(wxEventType type=wxEVT_NULL, int id=0, wxMenu* menu=NULL):wxMenuEvent(type, id, menu){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMenuEvent 
{
    zend_object zo;
    wxMenuEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMenuEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxMenuEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMenuEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMenuEvent, GetMenu, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMenuEvent, GetMenuId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMenuEvent, IsPopup, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMenuEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMoveEvent_entry;
void php_wxMoveEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMoveEvent_php: public wxMoveEvent{
	public:
	
	wxMoveEvent_php(const wxPoint& pt, int id=0):wxMoveEvent(pt, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMoveEvent 
{
    zend_object zo;
    wxMoveEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMoveEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxMoveEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMoveEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMoveEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMoveEvent, GetRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMoveEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMoveEvent, SetRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMoveEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSizeEvent_entry;
void php_wxSizeEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSizeEvent_php: public wxSizeEvent{
	public:
	
	wxSizeEvent_php(const wxSize& sz, int id=0):wxSizeEvent(sz, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSizeEvent 
{
    zend_object zo;
    wxSizeEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSizeEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSizeEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSizeEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSizeEvent, GetRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSizeEvent, GetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSizeEvent, SetRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSizeEvent, SetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSizeEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSetCursorEvent_entry;
void php_wxSetCursorEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSetCursorEvent_php: public wxSetCursorEvent{
	public:
	
	wxSetCursorEvent_php(wxCoord x=0, wxCoord y=0):wxSetCursorEvent(x, y){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSetCursorEvent 
{
    zend_object zo;
    wxSetCursorEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSetCursorEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSetCursorEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSetCursorEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSetCursorEvent, GetCursor, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSetCursorEvent, GetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSetCursorEvent, GetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSetCursorEvent, HasCursor, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSetCursorEvent, SetCursor, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSetCursorEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFileCtrlEvent_entry;
void php_wxFileCtrlEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFileCtrlEvent_php: public wxFileCtrlEvent{
	public:
	
	wxFileCtrlEvent_php(wxEventType type, wxObject* evtObject, int id):wxFileCtrlEvent(type, evtObject, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFileCtrlEvent 
{
    zend_object zo;
    wxFileCtrlEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFileCtrlEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxFileCtrlEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileCtrlEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, GetDirectory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, GetFile, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, GetFiles, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, GetFilterIndex, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, SetDirectory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, SetFiles, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, SetFilterIndex, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileCtrlEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFileDirPickerEvent_entry;
void php_wxFileDirPickerEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFileDirPickerEvent_php: public wxFileDirPickerEvent{
	public:
	
	wxFileDirPickerEvent_php(wxEventType type, wxObject* generator, int id, const wxString& path):wxFileDirPickerEvent(type, generator, id, path){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFileDirPickerEvent 
{
    zend_object zo;
    wxFileDirPickerEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFileDirPickerEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxFileDirPickerEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileDirPickerEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDirPickerEvent, GetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDirPickerEvent, SetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileDirPickerEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFontPickerEvent_entry;
void php_wxFontPickerEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFontPickerEvent_php: public wxFontPickerEvent{
	public:
	
	wxFontPickerEvent_php(wxObject* generator, int id, const wxFont& font):wxFontPickerEvent(generator, id, font){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFontPickerEvent 
{
    zend_object zo;
    wxFontPickerEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFontPickerEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxFontPickerEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFontPickerEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontPickerEvent, GetFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontPickerEvent, SetFont, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFontPickerEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxFileSystemWatcherEvent_entry;
void php_wxFileSystemWatcherEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxFileSystemWatcherEvent_php: public wxFileSystemWatcherEvent{
	public:
	
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxFileSystemWatcherEvent 
{
    zend_object zo;
    wxFileSystemWatcherEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxFileSystemWatcherEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxFileSystemWatcherEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileSystemWatcherEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileSystemWatcherEvent, GetChangeType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileSystemWatcherEvent, GetErrorDescription, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileSystemWatcherEvent, GetNewPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileSystemWatcherEvent, GetPath, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileSystemWatcherEvent, IsError, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxFileSystemWatcherEvent, ToString, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxGridEvent_entry;
void php_wxGridEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGridEvent_php: public wxGridEvent{
	public:
	
	wxGridEvent_php():wxGridEvent(){}
	wxGridEvent_php(int id, wxEventType type, wxObject* obj, int row=-1, int col=-1, int x=-1, int y=-1, bool sel=true, const wxKeyboardState& kbd=wxKeyboardState()):wxGridEvent(id, type, obj, row, col, x, y, sel, kbd){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxGridEvent 
{
    zend_object zo;
    wxGridEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxGridEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxGridEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, GetCol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, GetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, Selecting, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxGridSizeEvent_entry;
void php_wxGridSizeEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGridSizeEvent_php: public wxGridSizeEvent{
	public:
	
	wxGridSizeEvent_php():wxGridSizeEvent(){}
	wxGridSizeEvent_php(int id, wxEventType type, wxObject* obj, int rowOrCol=-1, int x=-1, int y=-1, const wxKeyboardState& kbd=wxKeyboardState()):wxGridSizeEvent(id, type, obj, rowOrCol, x, y, kbd){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxGridSizeEvent 
{
    zend_object zo;
    wxGridSizeEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxGridSizeEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxGridSizeEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridSizeEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, GetRowOrCol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridSizeEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxGridRangeSelectEvent_entry;
void php_wxGridRangeSelectEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGridRangeSelectEvent_php: public wxGridRangeSelectEvent{
	public:
	
	wxGridRangeSelectEvent_php():wxGridRangeSelectEvent(){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxGridRangeSelectEvent 
{
    zend_object zo;
    wxGridRangeSelectEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxGridRangeSelectEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxGridRangeSelectEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridRangeSelectEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, GetBottomRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, GetLeftCol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, GetRightCol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, GetTopRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, Selecting, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridRangeSelectEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxGridEditorCreatedEvent_entry;
void php_wxGridEditorCreatedEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxGridEditorCreatedEvent_php: public wxGridEditorCreatedEvent{
	public:
	
	wxGridEditorCreatedEvent_php():wxGridEditorCreatedEvent(){}
	wxGridEditorCreatedEvent_php(int id, wxEventType type, wxObject* obj, int row, int col, wxControl* ctrl):wxGridEditorCreatedEvent(id, type, obj, row, col, ctrl){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxGridEditorCreatedEvent 
{
    zend_object zo;
    wxGridEditorCreatedEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxGridEditorCreatedEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxGridEditorCreatedEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridEditorCreatedEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, GetCol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, GetControl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, GetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, SetCol, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, SetControl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, SetRow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxGridEditorCreatedEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxHeaderCtrlEvent_entry;
void php_wxHeaderCtrlEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxHeaderCtrlEvent_php: public wxHeaderCtrlEvent{
	public:
	
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxHeaderCtrlEvent 
{
    zend_object zo;
    wxHeaderCtrlEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxHeaderCtrlEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxHeaderCtrlEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxHeaderCtrlEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderCtrlEvent, GetColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderCtrlEvent, GetNewOrder, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHeaderCtrlEvent, GetWidth, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxHyperlinkEvent_entry;
void php_wxHyperlinkEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxHyperlinkEvent_php: public wxHyperlinkEvent{
	public:
	
	wxHyperlinkEvent_php(wxObject* generator, int id, const wxString& url):wxHyperlinkEvent(generator, id, url){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxHyperlinkEvent 
{
    zend_object zo;
    wxHyperlinkEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxHyperlinkEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxHyperlinkEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxHyperlinkEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHyperlinkEvent, GetURL, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHyperlinkEvent, SetURL, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxHyperlinkEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxQueryLayoutInfoEvent_entry;
void php_wxQueryLayoutInfoEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxQueryLayoutInfoEvent_php: public wxQueryLayoutInfoEvent{
	public:
	
	wxQueryLayoutInfoEvent_php(wxWindowID id=0):wxQueryLayoutInfoEvent(id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxQueryLayoutInfoEvent 
{
    zend_object zo;
    wxQueryLayoutInfoEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxQueryLayoutInfoEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxQueryLayoutInfoEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxQueryLayoutInfoEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, GetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, GetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, GetOrientation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, GetRequestedLength, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, GetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, SetAlignment, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, SetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, SetOrientation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, SetRequestedLength, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, SetSize, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxQueryLayoutInfoEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxCalculateLayoutEvent_entry;
void php_wxCalculateLayoutEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxCalculateLayoutEvent_php: public wxCalculateLayoutEvent{
	public:
	
	wxCalculateLayoutEvent_php(wxWindowID id=0):wxCalculateLayoutEvent(id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxCalculateLayoutEvent 
{
    zend_object zo;
    wxCalculateLayoutEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxCalculateLayoutEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxCalculateLayoutEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxCalculateLayoutEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalculateLayoutEvent, GetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalculateLayoutEvent, GetRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalculateLayoutEvent, SetFlags, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalculateLayoutEvent, SetRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCalculateLayoutEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxListEvent_entry;
void php_wxListEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxListEvent_php: public wxListEvent{
	public:
	
	wxListEvent_php(wxEventType commandType=wxEVT_NULL, int id=0):wxListEvent(commandType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxListEvent 
{
    zend_object zo;
    wxListEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxListEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxListEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxListEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetCacheFrom, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetCacheTo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetColumn, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetData, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetImage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetIndex, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetKeyCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetMask, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetPoint, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, GetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, IsEditCancelled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxListEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMouseEventsManager_entry;
void php_wxMouseEventsManager_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMouseEventsManager_php: public wxMouseEventsManager{
	public:
	
	wxMouseEventsManager_php():wxMouseEventsManager(){}
	wxMouseEventsManager_php(wxWindow* win):wxMouseEventsManager(win){}
		
	void MouseClickBegin(int item);
	void MouseClickCancelled(int item);
	bool MouseClicked(int item);
	bool MouseDragBegin(int item, const wxPoint& pos);
	void MouseDragCancelled(int item);
	void MouseDragEnd(int item, const wxPoint& pos);
	void MouseDragging(int item, const wxPoint& pos);
	int MouseHitTest(const wxPoint& pos);
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMouseEventsManager 
{
    zend_object zo;
    wxMouseEventsManager_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMouseEventsManager_free(void *object TSRMLS_DC);
zend_object_value php_wxMouseEventsManager_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMouseEventsManager_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, Connect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, AddFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, AddPendingEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, DeletePendingEvents, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetNextHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, GetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, IsUnlinked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessEventLocally, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, ProcessPendingEvents, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, QueueEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, RemoveFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SafelyProcessEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetNextHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, SetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvtHandler, Unlink, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEventsManager, Create, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseEventsManager, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxMouseState_entry;
void php_wxMouseState_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxMouseState_php: public wxMouseState{
	public:
	
	wxMouseState_php():wxMouseState(){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxMouseState 
{
    zend_object zo;
    wxMouseState_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxMouseState_free(void *object TSRMLS_DC);
zend_object_value php_wxMouseState_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxMouseState_functions[] = {
	PHP_ME(php_wxKeyboardState, AltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, CmdDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, GetModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, HasModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, MetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, RawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetAltDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetMetaDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetRawControlDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, SetShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxKeyboardState, ShiftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, Aux1IsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, Aux2IsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, GetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, GetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, LeftIsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, MiddleIsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, RightIsDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetAux1Down, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetAux2Down, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetLeftDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetMiddleDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetRightDown, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetState, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, SetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxMouseState, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxProcessEvent_entry;
void php_wxProcessEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxProcessEvent_php: public wxProcessEvent{
	public:
	
	wxProcessEvent_php(int id=0, int pid=0, int exitcode=0):wxProcessEvent(id, pid, exitcode){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxProcessEvent 
{
    zend_object zo;
    wxProcessEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxProcessEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxProcessEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxProcessEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxProcessEvent, GetExitCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxProcessEvent, GetPid, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxProcessEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxRibbonBarEvent_entry;
void php_wxRibbonBarEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxRibbonBarEvent_php: public wxRibbonBarEvent{
	public:
	
	wxRibbonBarEvent_php(wxEventType command_type=wxEVT_NULL, int win_id=0, wxRibbonPage* page=NULL):wxRibbonBarEvent(command_type, win_id, page){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxRibbonBarEvent 
{
    zend_object zo;
    wxRibbonBarEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxRibbonBarEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxRibbonBarEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonBarEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonBarEvent, GetPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonBarEvent, SetPage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonBarEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxRibbonButtonBarEvent_entry;
void php_wxRibbonButtonBarEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxRibbonButtonBarEvent_php: public wxRibbonButtonBarEvent{
	public:
	
	wxRibbonButtonBarEvent_php(wxEventType command_type=wxEVT_NULL, int win_id=0, wxRibbonButtonBar* bar=NULL):wxRibbonButtonBarEvent(command_type, win_id, bar){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxRibbonButtonBarEvent 
{
    zend_object zo;
    wxRibbonButtonBarEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxRibbonButtonBarEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxRibbonButtonBarEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonButtonBarEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonButtonBarEvent, GetBar, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonButtonBarEvent, PopupMenu, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonButtonBarEvent, SetBar, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonButtonBarEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxRibbonGalleryEvent_entry;
void php_wxRibbonGalleryEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxRibbonGalleryEvent_php: public wxRibbonGalleryEvent{
	public:
	
	wxRibbonGalleryEvent_php(wxEventType command_type=wxEVT_NULL, int win_id=0, wxRibbonGallery* gallery=NULL, wxRibbonGalleryItem* item=NULL):wxRibbonGalleryEvent(command_type, win_id, gallery, item){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxRibbonGalleryEvent 
{
    zend_object zo;
    wxRibbonGalleryEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxRibbonGalleryEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxRibbonGalleryEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonGalleryEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonGalleryEvent, GetGallery, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonGalleryEvent, GetGalleryItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonGalleryEvent, SetGallery, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonGalleryEvent, SetGalleryItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxRibbonGalleryEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSashEvent_entry;
void php_wxSashEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSashEvent_php: public wxSashEvent{
	public:
	
	wxSashEvent_php(int id=0, wxSashEdgePosition edge=wxSASH_NONE):wxSashEvent(id, edge){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSashEvent 
{
    zend_object zo;
    wxSashEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSashEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSashEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSashEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSashEvent, GetDragRect, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSashEvent, GetDragStatus, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSashEvent, GetEdge, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSashEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSpinEvent_entry;
void php_wxSpinEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSpinEvent_php: public wxSpinEvent{
	public:
	
	wxSpinEvent_php(wxEventType commandType=wxEVT_NULL, int id=0):wxSpinEvent(commandType, id){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSpinEvent 
{
    zend_object zo;
    wxSpinEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSpinEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSpinEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSpinEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSpinEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSpinEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSpinEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSpinDoubleEvent_entry;
void php_wxSpinDoubleEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSpinDoubleEvent_php: public wxSpinDoubleEvent{
	public:
	
	wxSpinDoubleEvent_php(const wxSpinDoubleEvent& event):wxSpinDoubleEvent(event){}
	wxSpinDoubleEvent_php(wxEventType commandType=wxEVT_NULL, int winid=0, double value=0):wxSpinDoubleEvent(commandType, winid, value){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSpinDoubleEvent 
{
    zend_object zo;
    wxSpinDoubleEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSpinDoubleEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSpinDoubleEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSpinDoubleEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSpinDoubleEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxSpinDoubleEvent, SetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSpinDoubleEvent, GetValue, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxSplitterEvent_entry;
void php_wxSplitterEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxSplitterEvent_php: public wxSplitterEvent{
	public:
	
	wxSplitterEvent_php(wxEventType eventType=wxEVT_NULL, wxSplitterWindow* splitter=NULL):wxSplitterEvent(eventType, splitter){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxSplitterEvent 
{
    zend_object zo;
    wxSplitterEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxSplitterEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxSplitterEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxSplitterEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSplitterEvent, GetSashPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSplitterEvent, GetWindowBeingRemoved, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSplitterEvent, GetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSplitterEvent, GetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSplitterEvent, SetSashPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxSplitterEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxStyledTextEvent_entry;
void php_wxStyledTextEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxStyledTextEvent_php: public wxStyledTextEvent{
	public:
	
	wxStyledTextEvent_php(wxEventType commandType=0, int id=0):wxStyledTextEvent(commandType, id){}
	wxStyledTextEvent_php(const wxStyledTextEvent& event):wxStyledTextEvent(event){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxStyledTextEvent 
{
    zend_object zo;
    wxStyledTextEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxStyledTextEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxStyledTextEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxStyledTextEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxStyledTextEvent, SetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetWParam, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetModificationType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetMargin, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetListType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetLinesAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetLine, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetAlt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetControl, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetDragAllowMove, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetDragText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetFoldLevelNow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetFoldLevelPrev, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetKey, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetLParam, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetLength, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetLine, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetLinesAdded, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetListType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetMargin, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetMessage, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetModificationType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetModifiers, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetPosition, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetShift, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetWParam, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetX, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetY, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetDragAllowMove, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetDragResult, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetDragText, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetFoldLevelNow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetFoldLevelPrev, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetKey, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetLParam, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, SetLength, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxStyledTextEvent, GetDragResult, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxTaskBarIconEvent_entry;
void php_wxTaskBarIconEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxTaskBarIconEvent_php: public wxTaskBarIconEvent{
	public:
	
	wxTaskBarIconEvent_php(wxEventType evtType, wxTaskBarIcon* tbIcon):wxTaskBarIconEvent(evtType, tbIcon){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxTaskBarIconEvent 
{
    zend_object zo;
    wxTaskBarIconEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxTaskBarIconEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxTaskBarIconEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTaskBarIconEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTaskBarIconEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxTimerEvent_entry;
void php_wxTimerEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxTimerEvent_php: public wxTimerEvent{
	public:
	
	wxTimerEvent_php():wxTimerEvent(){}
	wxTimerEvent_php(wxTimer& timer):wxTimerEvent(timer){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxTimerEvent 
{
    zend_object zo;
    wxTimerEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxTimerEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxTimerEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTimerEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTimerEvent, GetInterval, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTimerEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxTreeEvent_entry;
void php_wxTreeEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxTreeEvent_php: public wxTreeEvent{
	public:
	
	wxTreeEvent_php(wxEventType commandType, wxTreeCtrl* tree, const wxTreeItemId& item=wxTreeItemId()):wxTreeEvent(commandType, tree, item){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxTreeEvent 
{
    zend_object zo;
    wxTreeEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxTreeEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxTreeEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTreeEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, GetItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, GetKeyCode, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, GetKeyEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, GetLabel, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, GetOldItem, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, GetPoint, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, IsEditCancelled, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, SetToolTip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxTreeEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxWebViewEvent_entry;
void php_wxWebViewEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxWebViewEvent_php: public wxWebViewEvent{
	public:
	
	wxWebViewEvent_php():wxWebViewEvent(){}
	wxWebViewEvent_php(wxEventType type, int id, const wxString href, const wxString target):wxWebViewEvent(type, id, href, target){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxWebViewEvent 
{
    zend_object zo;
    wxWebViewEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxWebViewEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxWebViewEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWebViewEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWebViewEvent, GetTarget, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWebViewEvent, GetURL, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWebViewEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_FE_END
};
#endif

extern zend_class_entry* php_wxWizardEvent_entry;
void php_wxWizardEvent_destruction_handler(zend_rsrc_list_entry * TSRMLS_DC);

class wxWizardEvent_php: public wxWizardEvent{
	public:
	
	wxWizardEvent_php(wxEventType type=wxEVT_NULL, int id=wxID_ANY, bool direction=true, wxWizardPage* page=0):wxWizardEvent(type, id, direction, page){}
		
		
	void InitProperties(){
	}
	
	void ***tsrm_ls;
	zval* phpObj;
	void** properties;
	wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
struct zo_wxWizardEvent 
{
    zend_object zo;
    wxWizardEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
};

void php_wxWizardEvent_free(void *object TSRMLS_DC);
zend_object_value php_wxWizardEvent_new(zend_class_entry *class_type TSRMLS_DC);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWizardEvent_functions[] = {
	PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventCategory, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetSkipped, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, GetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, IsCommandEvent, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ResumePropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventObject, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetEventType, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetId, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, SetTimestamp, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, ShouldPropagate, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, Skip, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxEvent, StopPropagation, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, SetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, IsChecked, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetString, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetSelection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetInt, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxCommandEvent, GetExtraLong, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Allow, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, IsAllowed, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxNotifyEvent, Veto, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizardEvent, GetDirection, NULL, ZEND_ACC_PUBLIC)
	PHP_ME(php_wxWizardEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
	PHP_ME(php_wxWizardEvent, GetPage, NULL, ZEND_ACC_PUBLIC)
	PHP_FE_END
};
#endif

#endif //WXPHP_EVENTS_H_GUARD
