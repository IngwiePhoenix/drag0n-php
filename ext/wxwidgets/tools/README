========================================================================
xml_parser.php:
========================================================================

Brief
------------------------------------------------------------------------

PHP script used for the extraction of wxWidgets elements that serve
as input for the wxPHP C++ source code generator.

Details
------------------------------------------------------------------------

This script takes as input the xml documentation of wxWidgets that is 
generated by doxygen. It starts by reading the index.xml file on the
directory xml (that holds a copy of the documentation, as of writing
wxWidgets 2.9.3 docs were used)

It parses the needed "compound" elements on this file of type class and 
file. Then it extract the necessary data and store it onto various 
associative arrays. 

The content of all these arrays is stored on the output directory
in pretty printed json format to make manual editing possible.

Usage
------------------------------------------------------------------------
To run the parser on your command prompt change to the directory where
this readme file is stored and run: php xml_parser.php

Then copy the files on the 'output' directory to the 'dumps' directory
on the source_maker dir.

	NOTE: You should replace the full_classes_set.json on
		  source_maker/class_selector by the classes.json generated by
		  this script and check the manual_changes.txt on that directory
		  to make proper modifications if needed.

========================================================================
reference_generator.php:
========================================================================

Generate a simple reference of available wxWidgets class methods,
functions, constants, categorized constants (named enums) and object
constants and class constants.

To use it run php reference_generator.php, this will produce a new
directory named doc on the root directory of wxPHP source.

To start browsing the reference open the file index.html

========================================================================
changes_generator.php:
========================================================================

To facilitate the generation of CHANGES file by using the svn commits log by month.

========================================================================
merge.php:
========================================================================

Used to create a new classes.json based on the one generated by the
GUI Binding Utility, but synchronized with the classes.json generated
by the xml_parser.php. This script generates a merge_changes.log that
register methods no able to sync and removed. So that you can manually
re-enable them using the GUI binding utility.
