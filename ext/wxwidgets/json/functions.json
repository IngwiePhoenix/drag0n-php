{
	"wxGetApp":[
		{
			"return_type":"wxAppDerivedClass&",
			"brief_description":"This function doesn't exist in wxWidgets but it is created by using the wxIMPLEMENT_APP() macro.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxHandleFatalExceptions":[
		{
			"return_type":"bool",
			"brief_description":"If doIt is true, the fatal exceptions (also known as general protection faults under Windows or segmentation violations in the Unix world) will be caught and passed to wxApp::OnFatalException.",
			"parameters_type":[
				"bool"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"doIt"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxInitialize":[
		{
			"return_type":"bool",
			"brief_description":"This function is used in wxBase only and only if you don't create wxApp object at all.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"Initialize the library (may be called as many times as needed, but each call to wxInitialize() must be matched by wxUninitialize()).",
			"parameters_type":[
				"int",
				"wxChar**"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"argc",
				"argv"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxUninitialize":[
		{
			"return_type":"void",
			"brief_description":"This function is for use in console (wxBase) programs only.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void",
			"brief_description":"This function is for use in console (wxBase) programs only.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxWakeUpIdle":[
		{
			"return_type":"void",
			"brief_description":"This function wakes up the (internal and platform dependent) idle system, i.e.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxYield":[
		{
			"return_type":"bool",
			"brief_description":"Calls wxAppConsole::Yield.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSafeYield":[
		{
			"return_type":"bool",
			"brief_description":"Calls wxApp::SafeYield.",
			"parameters_type":[
				"wxWindow*",
				"bool"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"win",
				"onlyIfNeeded"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxEntry":[
		{
			"return_type":"int",
			"brief_description":"This function initializes wxWidgets in a platform-dependent way.",
			"parameters_type":[
				"int&",
				"wxChar**"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"argc",
				"argv"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"int",
			"brief_description":"See wxEntry(int&,wxChar**) for more info about this function.",
			"parameters_type":[
				"HINSTANCE",
				"HINSTANCE",
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"hInstance",
				"hPrevInstance",
				"pCmdLine",
				"nCmdShow"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxExit":[
		{
			"return_type":"void",
			"brief_description":"Exits application after calling wxApp::OnExit.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxCreatePersistentObject":[
		{
			"return_type":"wxPersistentObject*",
			"brief_description":"Overload allowing persistence adapter creation for wxBookCtrlBase-derived objects.",
			"parameters_type":[
				"wxBookCtrlBase*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"book"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxPersistentObject*",
			"brief_description":"Function used to create the correct persistent adapter for the given type of objects.",
			"parameters_type":[
				"T*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"obj"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxPersistentObject*",
			"brief_description":"Overload allowing persistence adapter creation for wxTopLevelWindow-derived objects.",
			"parameters_type":[
				"wxTopLevelWindow*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"book"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxPersistentObject*",
			"brief_description":"Overload allowing persistence adapter creation for wxTreebook objects.",
			"parameters_type":[
				"wxTreebook*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"book"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsDragResultOk":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if res indicates that something was done during a DnD operation, i.e.",
			"parameters_type":[
				"wxDragResult"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"res"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTransferFileToStream":[
		{
			"return_type":"bool",
			"brief_description":"Copies the given file to stream.",
			"parameters_type":[
				"const wxString&",
				"ostream&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"filename",
				"stream"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTransferStreamToFile":[
		{
			"return_type":"bool",
			"brief_description":"Copies the given stream to the file filename.",
			"parameters_type":[
				"istream&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"stream",
				"filename"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFromString":[
		{
			"return_type":"bool",
			"brief_description":"Converts string to a wxFont best represented by the given string.",
			"parameters_type":[
				"const wxString&",
				"wxFont*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"string",
				"font"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"Converts string to a wxColour best represented by the given string.",
			"parameters_type":[
				"const wxString&",
				"wxColour*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"string",
				"colour"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxToString":[
		{
			"return_type":"wxString",
			"brief_description":"Converts the given wxFont into a string.",
			"parameters_type":[
				"const wxFont&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"font"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"Converts the given wxColour into a string.",
			"parameters_type":[
				"const wxColour&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"colour"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSafeShowMessage":[
		{
			"return_type":"void",
			"brief_description":"This function shows a message to the user in a safe way and should be safe to call even before the application has been initialized or if it is currently in some other strange state (for example, about to crash).",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"title",
				"text"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSysErrorCode":[
		{
			"return_type":"unsigned long",
			"brief_description":"Returns the error code from the last system call.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSysErrorMsg":[
		{
			"return_type":"const wxChar*",
			"brief_description":"Returns the error message corresponding to the given system error code.",
			"parameters_type":[
				"unsigned long"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"errCode"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogGeneric":[
		{
			"return_type":"void",
			"brief_description":"Logs a message with the given wxLogLevel.",
			"parameters_type":[
				"wxLogLevel",
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"level",
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogGeneric":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"wxLogLevel",
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"level",
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogMessage":[
		{
			"return_type":"void",
			"brief_description":"For all normal, informational messages.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogMessage":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogVerbose":[
		{
			"return_type":"void",
			"brief_description":"For verbose output.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogVerbose":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogWarning":[
		{
			"return_type":"void",
			"brief_description":"For warnings - they are also normally shown to the user, but don't interrupt the program work.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogWarning":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogFatalError":[
		{
			"return_type":"void",
			"brief_description":"Like wxLogError(), but also terminates the program with the exit code 3.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogFatalError":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogError":[
		{
			"return_type":"void",
			"brief_description":"The functions to use for error messages, i.e.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogError":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogTrace":[
		{
			"return_type":"void",
			"brief_description":"Log a message at wxLOG_Trace log level (see wxLogLevelValues enum).",
			"parameters_type":[
				"const char*",
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"mask",
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void",
			"brief_description":"Like wxLogDebug(), trace functions only do something in debug builds and expand to nothing in the release one.",
			"parameters_type":[
				"wxTraceMask",
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"mask",
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogTrace":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"mask",
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"wxTraceMask",
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"mask",
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogDebug":[
		{
			"return_type":"void",
			"brief_description":"The right functions for debug output.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogDebug":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogStatus":[
		{
			"return_type":"void",
			"brief_description":"Messages logged by this function will appear in the statusbar of the frame or of the top level application window by default (i.e.",
			"parameters_type":[
				"wxFrame*",
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"frame",
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogStatus":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"wxFrame*",
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"frame",
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLogSysError":[
		{
			"return_type":"void",
			"brief_description":"Mostly used by wxWidgets itself, but might be handy for logging errors after system call (API function) failure.",
			"parameters_type":[
				"const char*",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVLogSysError":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"formatString",
				"argPtr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStringCheck":[
		{
			"return_type":"bool",
			"brief_description":"Allows to extend a function with the signature:",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"val"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsMainThread":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if this thread is the main one.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMutexGuiEnter":[
		{
			"return_type":"void",
			"brief_description":"This function must be called when any thread other than the main GUI thread wants to get access to the GUI library.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMutexGuiLeave":[
		{
			"return_type":"void",
			"brief_description":"This function is only defined on platforms which support preemptive threads.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAboutBox":[
		{
			"return_type":"void",
			"brief_description":"This function shows the standard about dialog containing the information specified in info.",
			"parameters_type":[
				"const wxAboutDialogInfo&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"info",
				"parent"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGenericAboutBox":[
		{
			"return_type":"void",
			"brief_description":"This function does the same thing as wxAboutBox() except that it always uses the generic wxWidgets version of the dialog instead of the native one.",
			"parameters_type":[
				"const wxAboutDialogInfo&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"info",
				"parent"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSplit":[
		{
			"return_type":"wxArrayString",
			"brief_description":"Splits the given wxString object using the separator sep and returns the result as a wxArrayString.",
			"parameters_type":[
				"const wxString&",
				"const wxChar",
				"const wxChar"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"sep",
				"escape"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxJoin":[
		{
			"return_type":"wxString",
			"brief_description":"Concatenate all lines of the given wxArrayString object using the separator sep and returns the result as a wxString.",
			"parameters_type":[
				"const wxArrayString&",
				"const wxChar",
				"const wxChar"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"arr",
				"sep",
				"escape"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAtomicInc":[
		{
			"return_type":"void",
			"brief_description":"This function increments value in an atomic manner.",
			"parameters_type":[
				"wxAtomicInt&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"value"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAtomicDec":[
		{
			"return_type":"wxInt32",
			"brief_description":"This function decrements value in an atomic manner.",
			"parameters_type":[
				"wxAtomicInt&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"value"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxBase64Encode":[
		{
			"return_type":"size_t",
			"brief_description":"This function encodes the given data using base64.",
			"parameters_type":[
				"char*",
				"size_t",
				"const void*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"dst",
				"dstLen",
				"src",
				"srcLen"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"This function encodes the given data using base64 and returns the output as a wxString.",
			"parameters_type":[
				"const void*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"src",
				"srcLen"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"This function encodes the given data using base64 and returns the output as a wxString.",
			"parameters_type":[
				"const wxMemoryBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"buf"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxBase64DecodedSize":[
		{
			"return_type":"size_t",
			"brief_description":"Returns the size of the buffer necessary to contain the data encoded in a base64 string of length srcLen.",
			"parameters_type":[
				"size_t"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"srcLen"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxBase64EncodedSize":[
		{
			"return_type":"size_t",
			"brief_description":"Returns the length of the string with base64 representation of a buffer of specified size len.",
			"parameters_type":[
				"size_t"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"len"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxBase64Decode":[
		{
			"return_type":"size_t",
			"brief_description":"This function decodes a Base64-encoded string.",
			"parameters_type":[
				"void*",
				"size_t",
				"const char*",
				"size_t",
				"wxBase64DecodeMode",
				"size_t*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"dst",
				"dstLen",
				"src",
				"srcLen",
				"mode",
				"posErr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"Decode a Base64-encoded wxString.",
			"parameters_type":[
				"void*",
				"size_t",
				"const wxString&",
				"wxBase64DecodeMode",
				"size_t*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"dst",
				"dstLen",
				"str",
				"mode",
				"posErr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxMemoryBuffer",
			"brief_description":"Decode a Base64-encoded string and return decoded contents in a buffer.",
			"parameters_type":[
				"const char*",
				"size_t",
				"wxBase64DecodeMode",
				"size_t*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"src",
				"srcLen",
				"mode",
				"posErr"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxMemoryBuffer",
			"brief_description":"Decode a Base64-encoded wxString and return decoded contents in a buffer.",
			"parameters_type":[
				"const wxString&",
				"wxBase64DecodeMode",
				"size_t*"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"src",
				"mode",
				"posErr"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetSingleChoiceIndex":[
		{
			"return_type":"int",
			"brief_description":"Same as wxGetSingleChoice() but returns the index representing the selected string.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"aChoices",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height",
				"initialSelection"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				true,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"n",
				"choices",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height",
				"initialSelection"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"int",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"choices",
				"initialSelection",
				"parent"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString*",
				"int",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"n",
				"choices",
				"initialSelection",
				"parent"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetSingleChoice":[
		{
			"return_type":"wxString",
			"brief_description":"Pops up a dialog box containing a message, OK\/Cancel buttons and a single-selection listbox.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"aChoices",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height",
				"initialSelection"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				true,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"n",
				"choices",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height",
				"initialSelection"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"int",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"choices",
				"initialSelection",
				"parent"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString*",
				"int",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"n",
				"choices",
				"initialSelection",
				"parent"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetSingleChoiceData":[
		{
			"return_type":"wxString",
			"brief_description":"Same as wxGetSingleChoice but takes an array of client data pointers corresponding to the strings, and returns one of these pointers or NULL if Cancel was pressed.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				true,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"aChoices",
				"client_data",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height",
				"initialSelection"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxString",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString&",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				true,
				true,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"n",
				"choices",
				"client_data",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height",
				"initialSelection"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"void**",
				"int",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"choices",
				"client_data",
				"initialSelection",
				"parent"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"void*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString*",
				"void**",
				"int",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"n",
				"choices",
				"client_data",
				"initialSelection",
				"parent"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetSelectedChoices":[
		{
			"return_type":"int",
			"brief_description":"Pops up a dialog box containing a message, OK\/Cancel buttons and a multiple-selection listbox.",
			"parameters_type":[
				"wxArrayInt&",
				"const wxString&",
				"const wxString&",
				"const wxArrayString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"selections",
				"message",
				"caption",
				"aChoices",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wxArrayInt&",
				"const wxString&",
				"const wxString&",
				"int",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				true,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"selections",
				"message",
				"caption",
				"n",
				"choices",
				"parent",
				"x",
				"y",
				"centre",
				"width",
				"height"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetColourFromUser":[
		{
			"return_type":"wxColour",
			"brief_description":"Shows the colour selection dialog and returns the colour selected by user or invalid colour (use wxColour::IsOk() to test whether a colour is valid) if the dialog was cancelled.",
			"parameters_type":[
				"wxWindow*",
				"const wxColour&",
				"const wxString&",
				"wxColourData*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"parent",
				"colInit",
				"caption",
				"data"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDDECleanUp":[
		{
			"return_type":"void",
			"brief_description":"Called when wxWidgets exits, to clean up the DDE system.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDDEInitialize":[
		{
			"return_type":"void",
			"brief_description":"Initializes the DDE system.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAbort":[
		{
			"return_type":"void",
			"brief_description":"Exits the program immediately.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDisableAsserts":[
		{
			"return_type":"void",
			"brief_description":"Disable the condition checks in the assertions.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsDebuggerRunning":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the program is running under debugger, false otherwise.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetAssertHandler":[
		{
			"return_type":"wxAssertHandler_t",
			"brief_description":"Sets the function to be called in case of assertion failure.",
			"parameters_type":[
				"wxAssertHandler_t"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"handler"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetDefaultAssertHandler":[
		{
			"return_type":"void",
			"brief_description":"Reset the assert handler to default function which shows a message box when an assert happens.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTrap":[
		{
			"return_type":"void",
			"brief_description":"Generate a debugger exception meaning that the control is passed to the debugger if one is attached to the process.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDELETE":[
		{
			"return_type":"",
			"brief_description":"A function which deletes and nulls the pointer.",
			"parameters_type":[
				"T*&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"ptr"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDELETEA":[
		{
			"return_type":"",
			"brief_description":"A function which deletes and nulls the pointer.",
			"parameters_type":[
				"T*&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"array"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSwap":[
		{
			"return_type":"",
			"brief_description":"Swaps the contents of two variables.",
			"parameters_type":[
				"T&",
				"T&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"first",
				"second"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVaCopy":[
		{
			"return_type":"void",
			"brief_description":"This macro is the same as the standard C99 va_copy for the compilers which support it or its replacement for those that don't.",
			"parameters_type":[
				"va_list",
				"va_list"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"argptrDst",
				"argptrSrc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDirSelector":[
		{
			"return_type":"wxString",
			"brief_description":"Pops up a directory selector dialog.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"long",
				"const wxPoint&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"default_path",
				"style",
				"pos",
				"parent"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxNewEventType":[
		{
			"return_type":"wxEventType",
			"brief_description":"Generates a new unique event type.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxPostEvent":[
		{
			"return_type":"void",
			"brief_description":"In a GUI application, this function posts event to the specified dest object using wxEvtHandler::AddPendingEvent().",
			"parameters_type":[
				"wxEvtHandler*",
				"const wxEvent&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"event"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxQueueEvent":[
		{
			"return_type":"void",
			"brief_description":"Queue an event for processing on the given object.",
			"parameters_type":[
				"wxEvtHandler*",
				"wxEvent*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"event"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFileSelector":[
		{
			"return_type":"wxString",
			"brief_description":"Pops up a file selector box.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"int",
				"wxWindow*",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"default_path",
				"default_filename",
				"default_extension",
				"wildcard",
				"flags",
				"parent",
				"x",
				"y"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFileSelectorEx":[
		{
			"return_type":"wxString",
			"brief_description":"An extended version of wxFileSelector.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"int*",
				"const wxString&",
				"int",
				"wxWindow*",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"default_path",
				"default_filename",
				"indexDefaultExtension",
				"wildcard",
				"flags",
				"parent",
				"x",
				"y"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLoadFileSelector":[
		{
			"return_type":"wxString",
			"brief_description":"Ask for filename to load.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"what",
				"extension",
				"default_name",
				"parent"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSaveFileSelector":[
		{
			"return_type":"wxString",
			"brief_description":"Ask for filename to save.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"what",
				"extension",
				"default_name",
				"parent"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetDiskSpace":[
		{
			"return_type":"bool",
			"brief_description":"This function returns the total number of bytes and number of free bytes on the disk containing the directory path (it should exist).",
			"parameters_type":[
				"const wxString&",
				"wxLongLong",
				"wxLongLong"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"path",
				"total",
				"free"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetOSDirectory":[
		{
			"return_type":"wxString",
			"brief_description":"Returns the Windows directory under Windows; other platforms return an empty string.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxParseCommonDialogsFilter":[
		{
			"return_type":"int",
			"brief_description":"Parses the wildCard, returning the number of filters.",
			"parameters_type":[
				"const wxString&",
				"wxArrayString&",
				"wxArrayString&"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"wildCard",
				"descriptions",
				"filters"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDos2UnixFilename":[
		{
			"return_type":"void",
			"brief_description":"Converts a DOS to a Unix filename by replacing backslashes with forward slashes.",
			"parameters_type":[
				"wxChar*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxUnix2DosFilename":[
		{
			"return_type":"void",
			"brief_description":"Converts a Unix to a DOS filename by replacing forward slashes with backslashes.",
			"parameters_type":[
				"wxChar*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDirExists":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if dirname exists and is a directory.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"dirname"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSplitPath":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"wxString*",
				"wxString*",
				"wxString*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"fullname",
				"path",
				"name",
				"ext"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFileModificationTime":[
		{
			"return_type":"time_t",
			"brief_description":"Returns time of last modification of given file.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"filename"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRenameFile":[
		{
			"return_type":"bool",
			"brief_description":"Renames file1 to file2, returning true if successful.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"bool"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"file1",
				"file2",
				"overwrite"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxCopyFile":[
		{
			"return_type":"bool",
			"brief_description":"Copies file1 to file2, returning true if successful.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"bool"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"file1",
				"file2",
				"overwrite"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFileExists":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the file exists and is a plain file.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"filename"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMatchWild":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the pattern matches the text; if dot_special is true, filenames beginning with a dot are not matched with wildcard characters.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"bool"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"pattern",
				"text",
				"dot_special"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetWorkingDirectory":[
		{
			"return_type":"wxString",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"buf",
				"sz"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxPathOnly":[
		{
			"return_type":"wxString",
			"brief_description":"Returns the directory part of the filename.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"path"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsWild":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the pattern contains wildcards.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"pattern"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsAbsolutePath":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the argument is an absolute filename, i.e.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"filename"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetCwd":[
		{
			"return_type":"wxString",
			"brief_description":"Returns a string containing the current (or working) directory.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetWorkingDirectory":[
		{
			"return_type":"bool",
			"brief_description":"Sets the current working directory, returning true if the operation succeeded.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"dir"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxConcatFiles":[
		{
			"return_type":"bool",
			"brief_description":"Concatenates file1 and file2 to file3, returning true if successful.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"file1",
				"file2",
				"file3"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRemoveFile":[
		{
			"return_type":"bool",
			"brief_description":"Removes file, returning true if successful.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"file"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMkdir":[
		{
			"return_type":"bool",
			"brief_description":"Makes the directory dir, returning true if successful.",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dir",
				"perm"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRmdir":[
		{
			"return_type":"bool",
			"brief_description":"Removes the directory dir, returning true if successful.",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dir",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindNextFile":[
		{
			"return_type":"wxString",
			"brief_description":"Returns the next file that matches the path passed to wxFindFirstFile().",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindFirstFile":[
		{
			"return_type":"wxString",
			"brief_description":"This function does directory searching; returns the first file that matches the path spec, or the empty string.",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"spec",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetFileKind":[
		{
			"return_type":"wxFileKind",
			"brief_description":"Returns the type of an open file.",
			"parameters_type":[
				"int"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"fd"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxFileKind",
			"brief_description":"",
			"parameters_type":[
				"FILE*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"fp"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFileNameFromPath":[
		{
			"return_type":"wxString",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"path"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"path"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetTempFileName":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"prefix",
				"buf"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"prefix",
				"buf"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetFontFromUser":[
		{
			"return_type":"wxFont",
			"brief_description":"Shows the font selection dialog and returns the font selected by user or invalid font (use wxFont::IsOk() to test whether a font is valid) if the dialog was cancelled.",
			"parameters_type":[
				"wxWindow*",
				"const wxFont&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"parent",
				"fontInit",
				"caption"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxColourDisplay":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the display is colour, false otherwise.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDisplayDepth":[
		{
			"return_type":"int",
			"brief_description":"Returns the depth of the display (a value of 1 denotes a monochrome display).",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetCursor":[
		{
			"return_type":"void",
			"brief_description":"Globally sets the cursor; only has an effect on Windows, Mac and GTK+.",
			"parameters_type":[
				"const wxCursor&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"cursor"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxClientDisplayRect":[
		{
			"return_type":"void",
			"brief_description":"Returns the dimensions of the work area on the display.",
			"parameters_type":[
				"int*",
				"int*",
				"int*",
				"int*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"x",
				"y",
				"width",
				"height"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetClientDisplayRect":[
		{
			"return_type":"wxRect",
			"brief_description":"",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetDisplayPPI":[
		{
			"return_type":"wxSize",
			"brief_description":"Returns the display resolution in pixels per inch.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDisplaySize":[
		{
			"return_type":"void",
			"brief_description":"Returns the display size in pixels.",
			"parameters_type":[
				"int*",
				"int*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"width",
				"height"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetDisplaySize":[
		{
			"return_type":"wxSize",
			"brief_description":"",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxDisplaySizeMM":[
		{
			"return_type":"void",
			"brief_description":"Returns the display size in millimeters.",
			"parameters_type":[
				"int*",
				"int*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"width",
				"height"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetDisplaySizeMM":[
		{
			"return_type":"wxSize",
			"brief_description":"",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxInitAllImageHandlers":[
		{
			"return_type":"void",
			"brief_description":"Initializes all available image handlers.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxEntryStart":[
		{
			"return_type":"bool",
			"brief_description":"This function can be used to perform the initialization of wxWidgets if you can't use the default initialization code for any reason.",
			"parameters_type":[
				"int&",
				"wxChar**"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"argc",
				"argv"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"See wxEntryStart(int&,wxChar**) for more info about this function.",
			"parameters_type":[
				"HINSTANCE",
				"HINSTANCE",
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"hInstance",
				"hPrevInstance",
				"pCmdLine",
				"nCmdShow"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxEntryCleanup":[
		{
			"return_type":"void",
			"brief_description":"Free resources allocated by a successful call to wxEntryStart().",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLL":[
		{
			"return_type":"wxLongLong_t",
			"brief_description":"This macro is defined for the platforms with a native 64 bit integer type and allow the use of 64 bit compile time constants:",
			"parameters_type":[
				"number"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				null
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxULL":[
		{
			"return_type":"wxLongLong_t",
			"brief_description":"This macro is defined for the platforms with a native 64 bit integer type and allow the use of 64 bit compile time constants:",
			"parameters_type":[
				"number"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				null
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFinite":[
		{
			"return_type":"int",
			"brief_description":"Returns a non-zero value if x is neither infinite nor NaN (not a number), returns 0 otherwise.",
			"parameters_type":[
				"double"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"x"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsNaN":[
		{
			"return_type":"bool",
			"brief_description":"Returns a non-zero value if x is NaN (not a number), returns 0 otherwise.",
			"parameters_type":[
				"double"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"x"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxConvertFromIeeeExtended":[
		{
			"return_type":"wxFloat64",
			"brief_description":"Converts the given array of 10 bytes (corresponding to 80 bits) to a float number according to the IEEE floating point standard format (aka IEEE standard 754).",
			"parameters_type":[
				"const wxInt8*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"bytes"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxConvertToIeeeExtended":[
		{
			"return_type":"void",
			"brief_description":"Converts the given floating number num in a sequence of 10 bytes which are stored in the given array bytes (which must be large enough) according to the IEEE floating point standard format (aka IEEE standard 754).",
			"parameters_type":[
				"wxFloat64",
				"wxInt8*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"num",
				"bytes"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRound":[
		{
			"return_type":"int",
			"brief_description":"Small wrapper around round().",
			"parameters_type":[
				"double"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"x"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsSameDouble":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if both double values are identical.",
			"parameters_type":[
				"double",
				"double"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"x",
				"y"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsNullDouble":[
		{
			"return_type":"bool",
			"brief_description":"Return true of x is exactly zero.",
			"parameters_type":[
				"double"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"x"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTrace":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"..."
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"format",
				null
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTraceLevel":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"int",
				"const wxString&",
				"..."
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"level",
				"format",
				null
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMakeMetafilePlaceable":[
		{
			"return_type":"bool",
			"brief_description":"Given a filename for an existing, valid metafile (as constructed using wxMetafileDC) makes it into a placeable metafile by prepending a header containing the given bounding box.",
			"parameters_type":[
				"const wxString&",
				"int",
				"int",
				"int",
				"int",
				"float"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"filename",
				"minX",
				"minY",
				"maxX",
				"maxY",
				"scale"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMessageBox":[
		{
			"return_type":"int",
			"brief_description":"Show a general purpose message dialog.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"int",
				"wxWindow*",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"style",
				"parent",
				"x",
				"y"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetNumberFromUser":[
		{
			"return_type":"long",
			"brief_description":"Shows a dialog asking the user for numeric input.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"long",
				"long",
				"long",
				"wxWindow*",
				"const wxPoint&"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"prompt",
				"caption",
				"value",
				"min",
				"max",
				"parent",
				"pos"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxCreateDynamicObject":[
		{
			"return_type":"wxObject*",
			"brief_description":"Creates and returns an object of the given class, if the class has been registered with the dynamic class system using DECLARE...",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"className"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxPersistentRegisterAndRestore":[
		{
			"return_type":"bool",
			"brief_description":"A shorter synonym for wxPersistenceManager::RegisterAndRestore().",
			"parameters_type":[
				"T*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"obj",
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindWindowAtPointer":[
		{
			"return_type":"wxWindow*",
			"brief_description":"Find the deepest window at the mouse pointer position, returning the window and current pointer position in screen coordinates.",
			"parameters_type":[
				"wxPoint&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"pt"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetActiveWindow":[
		{
			"return_type":"wxWindow*",
			"brief_description":"Gets the currently active window (implemented for MSW and GTK only currently, always returns NULL in the other ports).",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetTopLevelParent":[
		{
			"return_type":"wxWindow*",
			"brief_description":"Returns the first top level parent of the given window, or in other words, the frame or dialog containing it, or NULL.",
			"parameters_type":[
				"wxWindow*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"window"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextHasStyle":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"flags",
				"style"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTextAttrEq":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Compare two attribute objects.",
			"parameters_type":[
				"const wxRichTextAttr&",
				"const wxRichTextAttr&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"attr1",
				"attr2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTextAttrEqPartial":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Compare two attribute objects, but take into account the flags specifying attributes of interest.",
			"parameters_type":[
				"const wxRichTextAttr&",
				"const wxRichTextAttr&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"attr1",
				"attr2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextApplyStyle":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Apply one style to another.",
			"parameters_type":[
				"wxRichTextAttr&",
				"const wxRichTextAttr&",
				"wxRichTextAttr*"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"destStyle",
				"style",
				"compareWith"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextRemoveStyle":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"",
			"parameters_type":[
				"wxRichTextAttr&",
				"const wxRichTextAttr&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"destStyle",
				"style"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextCombineBitlists":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Combine two bitlists.",
			"parameters_type":[
				"int&",
				"int",
				"int&",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"valueA",
				"valueB",
				"flagsA",
				"flagsB"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextBitlistsEqPartial":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Compare two bitlists.",
			"parameters_type":[
				"int",
				"int",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"valueA",
				"valueB",
				"flags"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextSplitParaCharStyles":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Split into paragraph and character styles.",
			"parameters_type":[
				"const wxRichTextAttr&",
				"wxRichTextAttr&",
				"wxRichTextAttr&"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"style",
				"parStyle",
				"charStyle"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextTabsEq":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT bool",
			"brief_description":"Compare tabs.",
			"parameters_type":[
				"const wxArrayInt&",
				"const wxArrayInt&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"tabs1",
				"tabs2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextDecimalToRoman":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT wxString",
			"brief_description":"Convert a decimal to Roman numerals.",
			"parameters_type":[
				"long"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"n"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTextAttrCollectCommonAttributes":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT void",
			"brief_description":"",
			"parameters_type":[
				"wxTextAttr&",
				"const wxTextAttr&",
				"wxTextAttr&",
				"wxTextAttr&"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"currentStyle",
				"attr",
				"clashingAttr",
				"absentAttr"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRichTextModuleInit":[
		{
			"return_type":"WXDLLIMPEXP_RICHTEXT void",
			"brief_description":"",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMakeGuard":[
		{
			"return_type":"wxScopeGuard",
			"brief_description":"Returns a scope guard object which will call the specified function with the given parameters on scope exit.",
			"parameters_type":[
				"F",
				"P1",
				"...",
				"PN"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"func",
				"p1",
				null,
				"pN"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetStockLabel":[
		{
			"return_type":"wxString",
			"brief_description":"Returns label that should be used for given id element.",
			"parameters_type":[
				"wxWindowID",
				"long"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"id",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetTextFromUser":[
		{
			"return_type":"wxString",
			"brief_description":"Pop up a dialog box with title set to caption, message, and a default_value.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"default_value",
				"parent",
				"x",
				"y",
				"centre"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetPasswordFromUser":[
		{
			"return_type":"wxString",
			"brief_description":"Similar to wxGetTextFromUser() but the text entered in the dialog is not shown on screen but replaced with stars.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"const wxString&",
				"wxWindow*",
				"int",
				"int",
				"bool"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"message",
				"caption",
				"default_value",
				"parent",
				"x",
				"y",
				"centre"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetTimeZone":[
		{
			"return_type":"int",
			"brief_description":"Returns the difference between UTC and local time in seconds.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetLocalTime":[
		{
			"return_type":"long",
			"brief_description":"Returns the number of seconds since local time 00:00:00 Jan 1st 1970.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetLocalTimeMillis":[
		{
			"return_type":"wxLongLong",
			"brief_description":"Returns the number of milliseconds since local time 00:00:00 Jan 1st 1970.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetUTCTime":[
		{
			"return_type":"long",
			"brief_description":"Returns the number of seconds since GMT 00:00:00 Jan 1st 1970.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetUTCTimeMillis":[
		{
			"return_type":"wxLongLong",
			"brief_description":"Returns the number of milliseconds since GMT 00:00:00 Jan 1st 1970.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetUTCTimeUSec":[
		{
			"return_type":"wxLongLong",
			"brief_description":"Returns the number of microseconds since GMT 00:00:00 Jan 1st 1970.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxCreateFileTipProvider":[
		{
			"return_type":"wxTipProvider*",
			"brief_description":"This function creates a wxTipProvider which may be used with wxShowTip().",
			"parameters_type":[
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"filename",
				"currentTip"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxShowTip":[
		{
			"return_type":"bool",
			"brief_description":"This function shows a \"startup tip\" to the user.",
			"parameters_type":[
				"wxWindow*",
				"wxTipProvider*",
				"bool"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"parent",
				"tipProvider",
				"showAtStartup"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStringTokenize":[
		{
			"return_type":"wxArrayString",
			"brief_description":"This is a convenience function wrapping wxStringTokenizer which simply returns all tokens found in the given str as an array.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"wxStringTokenizerMode"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delims",
				"mode"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetTranslation":[
		{
			"return_type":"const wxString&",
			"brief_description":"This function returns the translation of string in the current locale().",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"string",
				"domain"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wxString&",
			"brief_description":"This is an overloaded version of wxGetTranslation(const wxString&, const wxString&), please see its documentation for general information.",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"unsigned",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"string",
				"plural",
				"n",
				"domain"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxBeginBusyCursor":[
		{
			"return_type":"void",
			"brief_description":"Changes the cursor to the given cursor for all windows in the application.",
			"parameters_type":[
				"const wxCursor*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"cursor"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxEndBusyCursor":[
		{
			"return_type":"void",
			"brief_description":"Changes the cursor back to the original cursor, for all windows in the application.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsBusy":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if between two wxBeginBusyCursor() and wxEndBusyCursor() calls.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxBell":[
		{
			"return_type":"void",
			"brief_description":"Ring the system bell.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxInfoMessageBox":[
		{
			"return_type":"void",
			"brief_description":"Shows a message box with the information about the wxWidgets build used, including its version, most important build parameters and the version of the underlying GUI toolkit.",
			"parameters_type":[
				"wxWindow*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"parent"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetLibraryVersionInfo":[
		{
			"return_type":"wxVersionInfo",
			"brief_description":"Get wxWidgets version information.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetenv":[
		{
			"return_type":"wxChar*",
			"brief_description":"This is a macro defined as getenv() or its wide char version in Unicode mode.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"var"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const char*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxWCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"name"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetEnv":[
		{
			"return_type":"bool",
			"brief_description":"Returns the current value of the environment variable var in value.",
			"parameters_type":[
				"const wxString&",
				"wxString*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"var",
				"value"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetEnv":[
		{
			"return_type":"bool",
			"brief_description":"Sets the value of the environment variable var (adding it if necessary) to value.",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"var",
				"value"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxUnsetEnv":[
		{
			"return_type":"bool",
			"brief_description":"Removes the variable var from the environment.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"var"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetEnvMap":[
		{
			"return_type":"bool",
			"brief_description":"Fill a map with the complete content of current environment.",
			"parameters_type":[
				"wxEnvVariableHashMap*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"map"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetBatteryState":[
		{
			"return_type":"wxBatteryState",
			"brief_description":"Returns battery state as one of wxBATTERY_NORMAL_STATE, wxBATTERY_LOW_STATE, wxBATTERY_CRITICAL_STATE, wxBATTERY_SHUTDOWN_STATE or wxBATTERY_UNKNOWN_STATE.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetPowerType":[
		{
			"return_type":"wxPowerType",
			"brief_description":"Returns the type of power source as one of wxPOWER_SOCKET, wxPOWER_BATTERY or wxPOWER_UNKNOWN.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetDisplayName":[
		{
			"return_type":"wxString",
			"brief_description":"Under X only, returns the current display name.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetKeyState":[
		{
			"return_type":"bool",
			"brief_description":"For normal keys, returns true if the specified key is currently down.",
			"parameters_type":[
				"wxKeyCode"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"key"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetMousePosition":[
		{
			"return_type":"wxPoint",
			"brief_description":"Returns the mouse position in screen coordinates.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetMouseState":[
		{
			"return_type":"wxMouseState",
			"brief_description":"Returns the current state of the mouse.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxEnableTopLevelWindows":[
		{
			"return_type":"void",
			"brief_description":"This function enables or disables all top level windows.",
			"parameters_type":[
				"bool"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"enable"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindWindowAtPoint":[
		{
			"return_type":"wxWindow*",
			"brief_description":"Find the deepest window at the given mouse position in screen coordinates, returning the window if found, or NULL if not.",
			"parameters_type":[
				"const wxPoint&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"pt"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindWindowByLabel":[
		{
			"return_type":"wxWindow*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"label",
				"parent"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindWindowByName":[
		{
			"return_type":"wxWindow*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"wxWindow*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"name",
				"parent"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFindMenuItemId":[
		{
			"return_type":"int",
			"brief_description":"Find a menu item identifier associated with the given frame's menu bar.",
			"parameters_type":[
				"wxFrame*",
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"frame",
				"menuString",
				"itemString"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxNewId":[
		{
			"return_type":"long",
			"brief_description":"",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRegisterId":[
		{
			"return_type":"void",
			"brief_description":"Ensures that Ids subsequently generated by wxNewId() do not clash with the given id.",
			"parameters_type":[
				"long"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"id"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLaunchDefaultApplication":[
		{
			"return_type":"bool",
			"brief_description":"Opens the document in the application associated with the files of this type.",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"document",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLaunchDefaultBrowser":[
		{
			"return_type":"bool",
			"brief_description":"Opens the url in user's default browser.",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"url",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxLoadUserResource":[
		{
			"return_type":"wxString",
			"brief_description":"Loads a user-defined Windows resource as a string.",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"resourceName",
				"resourceType"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxPostDelete":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"wxObject*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"object"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxQsort":[
		{
			"return_type":"void",
			"brief_description":"Function implementing quick sort algorithm.",
			"parameters_type":[
				"void*",
				"size_t",
				"size_t",
				"wxSortCallback",
				"const void*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"pbase",
				"total_elems",
				"size",
				"cmp",
				"user_data"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetDisplayName":[
		{
			"return_type":"void",
			"brief_description":"Under X only, sets the current display name.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"displayName"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStripMenuCodes":[
		{
			"return_type":"wxString",
			"brief_description":"Strips any menu codes from str and returns the result.",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"str",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetEmailAddress":[
		{
			"return_type":"wxString",
			"brief_description":"Copies the user's email address into the supplied buffer, by concatenating the values returned by wxGetFullHostName() and wxGetUserId().",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"buf",
				"sz"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetFreeMemory":[
		{
			"return_type":"wxMemorySize",
			"brief_description":"Returns the amount of free memory in bytes under environments which support it, and -1 if not supported or failed to perform measurement.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetHomeDir":[
		{
			"return_type":"wxString",
			"brief_description":"Return the (current) user's home directory.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetHostName":[
		{
			"return_type":"wxString",
			"brief_description":"Copies the current host machine's name into the supplied buffer.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"buf",
				"sz"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetFullHostName":[
		{
			"return_type":"wxString",
			"brief_description":"Returns the FQDN (fully qualified domain host name) or an empty string on error.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetUserHome":[
		{
			"return_type":"wxString",
			"brief_description":"Returns the home directory for the given user.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"user"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetUserId":[
		{
			"return_type":"wxString",
			"brief_description":"This function returns the \"user id\" also known as \"login name\" under Unix (i.e.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"buf",
				"sz"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetUserName":[
		{
			"return_type":"wxString",
			"brief_description":"This function returns the full user name (something like \"Mr. John Smith\").",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"buf",
				"sz"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetOsDescription":[
		{
			"return_type":"wxString",
			"brief_description":"Returns the string containing the description of the current platform in a user-readable form.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetOsVersion":[
		{
			"return_type":"wxOperatingSystemId",
			"brief_description":"Gets the version and the operating system ID for currently running OS.",
			"parameters_type":[
				"int*",
				"int*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"major",
				"minor"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsPlatform64Bit":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the operating system the program is running under is 64 bit.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsPlatformLittleEndian":[
		{
			"return_type":"bool",
			"brief_description":"Returns true if the current platform is little endian (instead of big endian).",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetLinuxDistributionInfo":[
		{
			"return_type":"wxLinuxDistributionInfo",
			"brief_description":"Returns a structure containing informations about the currently running Linux distribution.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxExecute":[
		{
			"return_type":"long",
			"brief_description":"Executes another program in Unix or Windows.",
			"parameters_type":[
				"const wxString&",
				"int",
				"wxProcess*",
				"const wxExecuteEnv*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"command",
				"flags",
				"callback",
				"env"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"long",
			"brief_description":"This is an overloaded version of wxExecute(const wxString&,int,wxProcess*), please see its documentation for general information.",
			"parameters_type":[
				"char**",
				"int",
				"wxProcess*",
				"const wxExecuteEnv*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"argv",
				"flags",
				"callback",
				"env"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"long",
			"brief_description":"",
			"parameters_type":[
				"wchar_t**",
				"int",
				"wxProcess*",
				"const wxExecuteEnv*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"argv",
				"flags",
				"callback",
				"env"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"long",
			"brief_description":"This is an overloaded version of wxExecute(const wxString&,int,wxProcess*), please see its documentation for general information.",
			"parameters_type":[
				"const wxString&",
				"wxArrayString&",
				"int",
				"const wxExecuteEnv*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"command",
				"output",
				"flags",
				"env"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"long",
			"brief_description":"This is an overloaded version of wxExecute(const wxString&,int,wxProcess*), please see its documentation for general information.",
			"parameters_type":[
				"const wxString&",
				"wxArrayString&",
				"wxArrayString&",
				"int",
				"const wxExecuteEnv*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"command",
				"output",
				"errors",
				"flags",
				"env"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxGetProcessId":[
		{
			"return_type":"unsigned long",
			"brief_description":"Returns the number uniquely identifying the current process in the system.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxKill":[
		{
			"return_type":"int",
			"brief_description":"Equivalent to the Unix kill function: send the given signal sig to the process with PID pid.",
			"parameters_type":[
				"long",
				"wxSignal",
				"wxKillError*",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"pid",
				"sig",
				"rc",
				"flags"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxShell":[
		{
			"return_type":"bool",
			"brief_description":"Executes a command in an interactive shell window.",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"command"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxShutdown":[
		{
			"return_type":"bool",
			"brief_description":"This function shuts down or reboots the computer depending on the value of the flags.",
			"parameters_type":[
				"int"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"flags"
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMicroSleep":[
		{
			"return_type":"void",
			"brief_description":"Sleeps for the specified number of microseconds.",
			"parameters_type":[
				"unsigned long"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"microseconds"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMilliSleep":[
		{
			"return_type":"void",
			"brief_description":"Sleeps for the specified number of milliseconds.",
			"parameters_type":[
				"unsigned long"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"milliseconds"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxNow":[
		{
			"return_type":"wxString",
			"brief_description":"Returns a string representing the current date and time.",
			"parameters_type":[
				
			],
			"parameters_is_array":[
				
			],
			"parameters_extra":[
				
			],
			"parameters_name":[
				
			],
			"parameters_required":[
				
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSleep":[
		{
			"return_type":"void",
			"brief_description":"Sleeps for the specified number of seconds.",
			"parameters_type":[
				"int"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"secs"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxUsleep":[
		{
			"return_type":"void",
			"brief_description":"",
			"parameters_type":[
				"unsigned long"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"milliseconds"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMakeFloatingPointValidator":[
		{
			"return_type":"wxFloatingPointValidator< T >",
			"brief_description":"Creates a wxFloatingPointValidator object with automatic type deduction.",
			"parameters_type":[
				"T*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"value",
				"style"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wxFloatingPointValidator< T >",
			"brief_description":"Creates a wxFloatingPointValidator object with automatic type deduction.",
			"parameters_type":[
				"int",
				"T*",
				"int"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"precision",
				"value",
				"style"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxMakeIntegerValidator":[
		{
			"return_type":"wxIntegerValidator< T >",
			"brief_description":"Creates a wxIntegerValidator object with automatic type deduction.",
			"parameters_type":[
				"T*",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"value",
				"style"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxVectorSort":[
		{
			"return_type":"void",
			"brief_description":"Sort the contents of a wxVector<T>.",
			"parameters_type":[
				"wxVector< T >&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"v"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsEmpty":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const char*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxWCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTmemchr":[
		{
			"return_type":"wxChar*",
			"brief_description":"",
			"parameters_type":[
				"const wxChar*",
				"wxChar",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"s",
				"c",
				"l"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"char",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"s",
				"c",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTmemcmp":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxChar*",
				"const wxChar*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"sz1",
				"sz2",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"sz1",
				"sz2",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTmemcpy":[
		{
			"return_type":"wxChar*",
			"brief_description":"",
			"parameters_type":[
				"wxChar*",
				"const wxChar*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"szOut",
				"szIn",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"szOut",
				"szIn",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTmemmove":[
		{
			"return_type":"wxChar*",
			"brief_description":"",
			"parameters_type":[
				"wxChar*",
				"const wxChar*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"szOut",
				"szIn",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"szOut",
				"szIn",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTmemset":[
		{
			"return_type":"wxChar*",
			"brief_description":"",
			"parameters_type":[
				"wxChar*",
				"const wxChar",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"szOut",
				"cIn",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"szOut",
				"cIn",
				"len"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSetlocale":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"int",
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"category",
				"locale"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"int",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"category",
				"locale"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"int",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"category",
				"locale"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrlen":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wxWCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrnlen":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"str",
				"maxlen"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"str",
				"maxlen"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrdup":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxWCharBuffer&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"s"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrcpy":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxWCharBuffer&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrncpy":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCStrData&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCharBuffer&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxCStrData&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxWCharBuffer&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrlcpy":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrcat":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCharBuffer&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxWCharBuffer&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrncat":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCStrData&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCharBuffer&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxCStrData&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxWCharBuffer&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrcmp_String":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStricmp_String":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrcoll_String":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrspn_String":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrcspn_String":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrncmp_String":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrnicmp_String":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const T&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"s1",
				"s2",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrxfrm":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"T*",
				"const wxCharTypeBuffer< T >&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCStrData&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxCStrData&",
				"size_t"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"dest",
				"src",
				"n"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrtok":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*",
				"char**"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delim",
				"saveptr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*",
				"wchar_t**"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delim",
				"saveptr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxCStrData&",
				"char**"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delim",
				"saveptr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxCStrData&",
				"wchar_t**"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delim",
				"saveptr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&",
				"char**"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delim",
				"saveptr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&",
				"wchar_t**"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"str",
				"delim",
				"saveptr"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrstr":[
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"haystack",
				"needle"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrchr":[
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"T"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrrchr":[
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"T"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"int"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxUniCharRef&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"char"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"wchar_t"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"c"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrpbrk":[
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const char*",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"const wxCStrData&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"const T*",
			"brief_description":"",
			"parameters_type":[
				"const S&",
				"const wxCharTypeBuffer< T >&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const char*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wchar_t*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"wchar_t*",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"s",
				"accept"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFopen":[
		{
			"return_type":"FILE*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"path",
				"mode"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFreopen":[
		{
			"return_type":"FILE*",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&",
				"FILE*"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"path",
				"mode",
				"stream"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRemove":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"path"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxRename":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"const wxString&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"oldpath",
				"newpath"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFgets":[
		{
			"return_type":"char*",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"int",
				"FILE*"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"s",
				"size",
				"stream"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxFgetc":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"FILE*"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"stream"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxUngetc":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"int",
				"FILE*"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"stream"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAtoi":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"str"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAtol":[
		{
			"return_type":"long",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"str"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxAtof":[
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"str"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrtod":[
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const char*",
				"char**"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"nptr",
				"endptr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"wchar_t**"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"nptr",
				"endptr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const wxCharTypeBuffer< T >&",
				"T**"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"nptr",
				"endptr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const wxString&",
				"T"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"nptr",
				"endptr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const wxCStrData&",
				"T"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"nptr",
				"endptr"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxSystem":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxString&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"str"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrftime":[
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"char*",
				"size_t",
				"size_t",
				"const wxString&",
				"const struct tm*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"s",
				"max",
				"max",
				"format",
				"tm"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		},
		{
			"return_type":"size_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t*",
				"size_t",
				"size_t",
				"const wxString&",
				"const struct tm*"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"s",
				"max",
				"max",
				"format",
				"tm"
			],
			"parameters_required":[
				true,
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsalnum":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsalpha":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIscntrl":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsdigit":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsgraph":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIslower":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsprint":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIspunct":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsspace":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsupper":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsxdigit":[
		{
			"return_type":"bool",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTolower":[
		{
			"return_type":"wxUniChar",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxToupper":[
		{
			"return_type":"wxUniChar",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsctrl":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"const wxUniChar&"
			],
			"parameters_is_array":[
				false
			],
			"parameters_extra":[
				false
			],
			"parameters_name":[
				"c"
			],
			"parameters_required":[
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsalnum_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsalpha_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIscntrl_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsdigit_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsgraph_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIslower_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsprint_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIspunct_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsspace_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsupper_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxIsxdigit_l":[
		{
			"return_type":"int",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxTolower_l":[
		{
			"return_type":"wchar_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxToupper_l":[
		{
			"return_type":"wchar_t",
			"brief_description":"",
			"parameters_type":[
				"wchar_t",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false
			],
			"parameters_extra":[
				false,
				false
			],
			"parameters_name":[
				"c",
				"loc"
			],
			"parameters_required":[
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrtod_l":[
		{
			"return_type":"double",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"wchar_t**",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false
			],
			"parameters_name":[
				"c",
				"endptr",
				"loc"
			],
			"parameters_required":[
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrtol_l":[
		{
			"return_type":"long",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"wchar_t**",
				"int",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"c",
				"endptr",
				"base",
				"loc"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	],
	"wxStrtoul_l":[
		{
			"return_type":"unsigned long",
			"brief_description":"",
			"parameters_type":[
				"const wchar_t*",
				"wchar_t**",
				"int",
				"const wxXLocale&"
			],
			"parameters_is_array":[
				false,
				false,
				false,
				false
			],
			"parameters_extra":[
				false,
				false,
				false,
				false
			],
			"parameters_name":[
				"c",
				"endptr",
				"base",
				"loc"
			],
			"parameters_required":[
				true,
				true,
				true,
				true
			],
			"parameters_default_value":[
				
			]
		}
	]
}